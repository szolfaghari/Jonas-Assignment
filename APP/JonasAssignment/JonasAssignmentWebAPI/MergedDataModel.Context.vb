'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated from a template.
'
'     Manual changes to this file may cause unexpected behavior in your application.
'     Manual changes to this file will be overwritten if the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Data.Entity
Imports System.Data.Entity.Infrastructure
Imports System.Data.Entity.Core.Objects
Imports System.Linq

Partial Public Class MergedDataEntities
    Inherits DbContext

    Public Sub New()
        MyBase.New("name=MergedDataEntities")
    End Sub

    Protected Overrides Sub OnModelCreating(modelBuilder As DbModelBuilder)
        Throw New UnintentionalCodeFirstException()
    End Sub


    Public Overridable Function AddFieldIfNotExisting(field_name As String) As ObjectResult(Of Nullable(Of Integer))
        Dim field_nameParameter As ObjectParameter = If(field_name IsNot Nothing, New ObjectParameter("field_name", field_name), New ObjectParameter("field_name", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Nullable(Of Integer))("AddFieldIfNotExisting", field_nameParameter)
    End Function

    Public Overridable Function AddOrUpdateDataIfNotExisting(year As Nullable(Of Integer), unit_id As Nullable(Of Integer), field_name As String, value As String) As Integer
        Dim yearParameter As ObjectParameter = If(year.HasValue, New ObjectParameter("year", year), New ObjectParameter("year", GetType(Integer)))

        Dim unit_idParameter As ObjectParameter = If(unit_id.HasValue, New ObjectParameter("unit_id", unit_id), New ObjectParameter("unit_id", GetType(Integer)))

        Dim field_nameParameter As ObjectParameter = If(field_name IsNot Nothing, New ObjectParameter("field_name", field_name), New ObjectParameter("field_name", GetType(String)))

        Dim valueParameter As ObjectParameter = If(value IsNot Nothing, New ObjectParameter("value", value), New ObjectParameter("value", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AddOrUpdateDataIfNotExisting", yearParameter, unit_idParameter, field_nameParameter, valueParameter)
    End Function

    Public Overridable Function AddOrUpdateValue(year As Nullable(Of Integer), unit_id As Nullable(Of Integer), field_id As Nullable(Of Integer), value As String) As Integer
        Dim yearParameter As ObjectParameter = If(year.HasValue, New ObjectParameter("year", year), New ObjectParameter("year", GetType(Integer)))

        Dim unit_idParameter As ObjectParameter = If(unit_id.HasValue, New ObjectParameter("unit_id", unit_id), New ObjectParameter("unit_id", GetType(Integer)))

        Dim field_idParameter As ObjectParameter = If(field_id.HasValue, New ObjectParameter("field_id", field_id), New ObjectParameter("field_id", GetType(Integer)))

        Dim valueParameter As ObjectParameter = If(value IsNot Nothing, New ObjectParameter("value", value), New ObjectParameter("value", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AddOrUpdateValue", yearParameter, unit_idParameter, field_idParameter, valueParameter)
    End Function

    Public Overridable Function GetValueListJson(year As Nullable(Of Integer), unit_id As Nullable(Of Integer)) As ObjectResult(Of String)
        Dim yearParameter As ObjectParameter = If(year.HasValue, New ObjectParameter("year", year), New ObjectParameter("year", GetType(Integer)))

        Dim unit_idParameter As ObjectParameter = If(unit_id.HasValue, New ObjectParameter("unit_id", unit_id), New ObjectParameter("unit_id", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of String)("GetValueListJson", yearParameter, unit_idParameter)
    End Function

    Public Overridable Function GetValueListJsonEx(year_list As String, unit_id_list As String, field_list As String) As ObjectResult(Of String)
        Dim year_listParameter As ObjectParameter = If(year_list IsNot Nothing, New ObjectParameter("year_list", year_list), New ObjectParameter("year_list", GetType(String)))

        Dim unit_id_listParameter As ObjectParameter = If(unit_id_list IsNot Nothing, New ObjectParameter("unit_id_list", unit_id_list), New ObjectParameter("unit_id_list", GetType(String)))

        Dim field_listParameter As ObjectParameter = If(field_list IsNot Nothing, New ObjectParameter("field_list", field_list), New ObjectParameter("field_list", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of String)("GetValueListJsonEx", year_listParameter, unit_id_listParameter, field_listParameter)
    End Function

End Class
